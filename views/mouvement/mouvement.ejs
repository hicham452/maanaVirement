<%- include('../partials/header'); %>

<style>

</style>

<div class="container">
  <div class="row">
    <div class="card z-depth-2">
      <div class="card-content ">
        <span class="card-title">ATTESTATION DU MOUVEMENT COMMERCIAL</span>
        <div class="card-tabs">
          <ul class="tabs ">
            <% if(!user.isControl){ %>
            <li class="tab col s6 "> <a class="blue-text" href="#generation">Generation</a></li>
            <% } %>
            <li class="tab col s6 "> <a class="blue-text" href="#consultation">Consultation</a></li>
          </ul>
          <% if(!user.isControl){ %>
          <div id="generation">
            <form style="margin-top:2vw;" action="/api/mouvement" method="post">
              <div class="row">
                <div class="input-field col s6">
                  <input id="compte" name="compte" type="text" required>
                  <label for="compte">N° De Compte</label>
                </div>
                <div class="input-field col s5">
                  <input disabled id="agence" value="<%= user.agence %>" name="agence" type="text">
                  <label for="agence">Agence</label>
                </div>
              </div>
              <div class="row">
                <div class="input-field col s4">
                  <i class="material-icons prefix">date_range</i>
                  <input type="text" id="dateDebut" class="datepicker" name="dateDebut" required>
                  <label for="dateDebut">Date Debut</label>
                </div>
                <div class="input-field col s4">
                  <i class="material-icons prefix">date_range</i>
                  <input type="text" id="dateFin" class="datepicker" name="dateFin" required>
                  <label for="dateFin">Date Fin</label>
                </div>
                <div class="input-field col s3">
                  <input id="agence" type="number" step="0.01" name="montant" required>
                  <label for="agence">Montant</label>
                </div>
                <div style="margin-top: 20px;" class="col s1">
                  <button type="button" onclick="addMouvement();" class="btn-floating pulse blue"><i
                      class="material-icons ">add</i></button>
                </div>
                <input type="hidden" name="etape" value="1">
              </div>
              <div id="mouvement">
              </div>
              <div class="row">
                <div class="directeur input-field col s6">
                  <select id="directeur" required="required" name="directeur" required>
                    <option value="" disabled selected>1er Signataire</option>
                    <option value="<%= user.directeur %>"><%= user.directeur %></option>
                    <option value="<%= user.adjoint %>"><%= user.adjoint %></option>
                  </select>
                  <label data-error="Select an option" for="directeur">Directeur</label>
                </div>
                <div class="input-field col s5 ">
                  <select id="adjoint" name="adjoint" required="required">
                    <option value="" disabled selected>2ème Signataire</option>
                    <option value="<%= user.adjoint  %>"><%= user.adjoint %></option>
                    <option value="<%= user.chefService %>"><%= user.chefService %></option>
                  </select>
                  <label data-error="Select an option" for="adjoint">Adjoint</label>
                </div>
              </div>
              <div class="row">
                <button class="btn blue">Enregister</button>
                <a href="/api/index" class="btn">Retour</a>
              </div>
            </form>
          </div>
          <% } %>

          <div id="consultation">
            <span style="margin-top:1vw;" class="card-title">CRITERE DE RECHERCHE</span>
            <form style="margin-top:1vw;" action="/api/mouvement/index" method="GET">
              <div class="row">
                <div class="input-field col s6">
                  <input id="compte" name="ncp" type="text">
                  <label for="compte">N° De Compte</label>
                </div>
                <div class="input-field col s6">
                  <% if (!user.isControl) {%>
                  <input disabled id="age" value="<%= user.agence %> " name="age" type="text">
                  <% } else { %>
                  <input id="age" name="age" type="text">
                  <% } %>
                  <label for="age">Agence</label>
                </div>
                <div class="input-field col s6 ">
                  <select id="etape" name="etape">
                    <option value="" disabled selected>Etat Attestation</option>
                    <option value="1">Attestation Initée</option>
                    <option value="2">Attestation Acceptée</option>
                    <option value="3">Attestation Rejetée</option>
                  </select>
                  <label data-error="Select an option" for="etape">Etat Attestation</label>
                </div>
                <div class="input-field col s6">
                  <input id="id" name="id" type="text">
                  <label for="id">ID Document</label>
                </div>
                <div class="input-field col s6">
                  <i class="material-icons prefix">date_range</i>
                  <input id="dateDebut1" name="dateDebut1" class="datepicker" type="text">
                  <label for="dateDebut1">date Dédut </label>
                </div>
                <div class="input-field col s6">
                  <i class="material-icons prefix">date_range</i>
                  <input id="dateFin1" name="dateFin1" class="datepicker" type="text">
                  <label for="dateFin1">date Fin </label>
                </div>
              </div>

              <div class="row">
                <button class="btn">rechercher</button>
              </div>
            </form>
            <span class="card-title" style="margin-top:2vw;">RESULTAT DE RECHERCHE</span>
            <table class="striped" id="mouvementTable">
              <thead>
                <tr>
                  <th>Id Attestation</th>
                  <th>Agence</th>
                  <th>N° Compte</th>
                  <th>Date</th>
                  <th>Etat</th>
                </tr>
              </thead>
              <tbody>
              </tbody>
            </table>
          </div>

        </div>
      </div>
    </div>
  </div>
</div>

<div id="modal1" class="modal modal-fixed-footer">
  <div class="modal-content">
    <h4>Détail Attestation Du Mouvement Commercial</h4>
    <div class="collection">
    </div>
  </div>
  <div class="modal-footer">

    <!--  <a href="" id="generer" class="modal-close waves-effect waves-green btn-small ">Generer</a> -->

    <a href="#!" class="modal-close waves-effect waves-green btn-small blue">Retour</a>
  </div>
</div>
<%- include('../partials/footer'); %>
<script>
  console.log(typeof "<%= user.isControl %> ")
  //select modal
  const modal = document.querySelector(".modal-content .collection");
  const acceptModal = document.querySelector(".modal-footer #accepter");
  const refuseModal = document.querySelector(".modal-footer #refuser");
  //activate modals
  $('.modal').modal();

  //initiale table
  const table = $('#mouvementTable').DataTable({
    bFilter: false,
    ordering: true,
    lengthChange: false,
    paging: true,
    dom: 'Bfrtip',
    buttons: [{
      extend: 'excel',
      tag: 'a',
      text: "<i class='material-icons medium' > cloud_download</i>",
      title: 'List Attestations Mouvement'
    }],
    language: {
      "url": "/public/js/datatable_French.json"
    },
    /* pagingType: "simple", */
    columns: [{
        data: '_id',
        "fnCreatedCell": function (nTd, sData, oData, iRow, iCol) {
          $(nTd).html(
            `<a class="detail" href="/api/mouvement/${oData._id}">${oData._id}</a>`);
        }
      },
      {
        data: 'age'
      },
      {
        data: 'ncp'
      },
      {
        data: 'date',
        type: 'date',
        render: function (value) {
          if (value === null) return "";
          return moment(value).format('DD/MM/YYYY HH:MM');
        }
      },
      {
        data: 'etape',
        render: function (value) {

          if (value === "1") {
            return "Demande initiée"
          } else if (value === "2") {
            return "Demande Acceptée"
          } else {
            return "Demande Rejetée"
          }

        }
      }
    ]
  });


  //add mouvement

  if ("#mouvement") {
    let num = 1

    function addMouvement() {

      num++

      const mouvement = document.getElementById("mouvement");
      if (mouvement.childElementCount < 4) {

        const insertDiv = document.createElement("div");
        insertDiv.setAttribute("class", "row removeClass" + num);
        let element = '<div class="input-field col s4">';
        element += '<i class="material-icons prefix">date_range</i>';
        element += '<input type="text" id="dateDebut' + num +
          '" class="datepicker" name="dateDebut" required>';
        element += '<label for="dateDebut' + num + '">Date Debut</label></div>'
        element += '<div class="input-field col s4">';
        element += '<i class="material-icons prefix">date_range</i>';
        element += '<input type="text" id="dateFin' + num + '" class="datepicker" name="dateFin" required>';
        element += '<label for="dateFin' + num + '">Date Fin</label></div>'
        element += '<div class="input-field col s3">'
        element += '<input id="montant' + num + '" type="text" name="montant" required>';
        element += '<label for="montant' + num + '">Montant</label></div>';
        element +=
          '<div style="margin-top: 20px;" class="col s1"> <button type="button" onclick="removeMouvement(' + num +
          ')"; class="btn-floating"><i class="material-icons ">remove</i></button></div>';
        insertDiv.innerHTML = element;
        mouvement.appendChild(insertDiv);

        $('.datepicker').datepicker({
          disableWeekends: true,
          showClearBtn: true,
          autoClose: true,
          format: 'dd-mm-yyyy',
          i18n: {

            months: ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre',
              'Octobre',
              'Novembre', 'Décembre'
            ],
            monthsShort: ['Jan', 'Fev', 'Mar', 'Avr', 'Mai', 'Jun', 'Jul', 'Aou', 'Sep', 'Oct', 'Nov', 'Dec'],
            weekdays: ['Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi'],
            weekdaysShort: ['Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam'],
            weekdaysAbbrev: ['D', 'L', 'M', 'M', 'J', 'V', 'S']
          },


        });
      } else {

        M.toast({
          html: "Numbre maximum de mouvements atteint",
          displayLength: 6000,
          classes: 'red rounded h4'
        })
      }

    };

    function removeMouvement(id) {

      document.querySelector(".removeClass" + id).remove()
    }
  }



  //activate datepicker
  $('.datepicker').datepicker({
    disableWeekends: true,
    showClearBtn: true,
    autoClose: true,
    format: 'dd-mm-yyyy',
    i18n: {

      months: ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre',
        'Novembre', 'Décembre'
      ],
      monthsShort: ['Jan', 'Fev', 'Mar', 'Avr', 'Mai', 'Jun', 'Jul', 'Aou', 'Sep', 'Oct', 'Nov', 'Dec'],
      weekdays: ['Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi'],
      weekdaysShort: ['Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam'],
      weekdaysAbbrev: ['D', 'L', 'M', 'M', 'J', 'V', 'S']
    },


  });





  //handel form submition
  if ($("#generation form")) {

    $("#generation form").submit(async function (e) {

      e.preventDefault();

      let confirmMessage;

      confirmMessage = confirm('Etes-vous sur de vouloir effectuer l\'opération?');

      if (!confirmMessage) {

        M.toast({
          html: "Demande Annulée",
          displayLength: 6000,
          classes: 'red rounded h4'
        })

        return false

      } else {

        let form = $(this);

        //remove disabled attribute from input to be able to extract value
        let disabled = form.find(':input:disabled').removeAttr('disabled');
        //extract value from form input
        let data = form.serializeArray();
        //activate disabmled attibute after fetching data from fom
        disabled.attr('disabled', 'disabled');
        console.log(data)
        //create an array of datedebut

        let dateDebut = data.reduce((accumulator, element) => {

          if (element.name == "dateDebut") {

            accumulator.push(element.value);

          }

          return accumulator;

        }, []);

        //create an array of dateFin
        let dateFin = data.reduce((accumulator, element) => {

          if (element.name == "dateFin") {

            accumulator.push(element.value);

          }

          return accumulator;

        }, [])

        //create an array of montant

        let montant = data.reduce((accumulator, element) => {

          if (element.name == "montant") {

            accumulator.push(element.value);

          }

          return accumulator;

        }, [])

        //create the data to sned to server

        function getFormData(data) {
          var unindexed_array = data;
          var indexed_array = {};
          $.map(unindexed_array, function (n, i) {
            indexed_array[n['name']] = n['value'];
          });
          return indexed_array;
        }

        data = getFormData(data)

        data.dateDebut = dateDebut;
        data.dateFin = dateFin;
        data.montant = montant;

        //send request
        try {
          const res = await fetch('/api/mouvement', {
            method: 'POST',
            body: JSON.stringify({
              data
            }),
            headers: {
              'Content-Type': 'application/json'
            }
          })

          const response = await res
          if (response.status === 200) {
            const result = await res.json()
            //clear input field
            $("#generation form").trigger('reset');
            //send success message
            M.toast({
              html: "Demande Attestion Mouvement Commercial N° " + result.result._id + " initiée",
              displayLength: 6000,
              classes: 'green rounded h4'
            })
          } else if (response.status === 400) {

            const data = await res.json();

            M.toast({
              html: data.error,
              displayLength: 6000,
              classes: 'red rounded h4'
            })

          } else if (response.status === 401) {

            location.assign("/api/auth/?error=l'opération non pas aboutie , Utilisateur déconnecté")

          }


        } catch (err) {

          console.log(err)
        }

      }

    })
  }



  //handel search form
  $("#consultation form").submit(async function (e) {
    console.log("you clicked me")
    e.preventDefault()
    table.clear().draw()

    //get value
    const ncp = this.ncp.value;
    const age = this.age.value;
    const id = this.id.value;
    const etape = this.etape.value;
    const dateDebut = this.dateDebut1.value;
    const dateFin = this.dateFin1.value;

    //console.log(ncp, age, id, etape, dateFin, dateDebut)


    //send the request
    try {
      const res = await fetch('/api/mouvement/index', {
        method: 'POST',
        body: JSON.stringify({
          ncp,
          age,
          id,
          etape,
          dateDebut,
          dateFin
        }),
        headers: {
          'Content-Type': 'application/json'
        }
      })

      const result = await res

      if (result.status === 200) {
        const data = await res.json()


        table.rows.add(data.mouvement).draw();

      } else if (result.status === 400) {

        const data = await res.json();

        M.toast({
          html: data.error,
          displayLength: 6000,
          classes: 'red rounded h4'
        })

      } else {

        location.assign("/api/auth/?error=l'opération non pas aboutie , Utilisateur déconnecté")


      }


    } catch (err) {

      console.log(err)

    }
  })


  //handel affichage detail attestation
  table.on('draw', function () {
    // console.log( 'Redraw occurred at: '+new Date().getTime() );

    const detail = document.querySelectorAll(".detail");

    detail.forEach(element => {

      element.addEventListener("click", async function (e) {

        e.preventDefault();

        if ($(".modal-footer #generer")) $(".modal-footer #generer").remove();
        if ($(".modal-footer #statuer")) $(".modal-footer #statuer").remove();

        let id = this.innerHTML
        try {
          const resDetail = await fetch(`/api/mouvement/${id}`, {
            method: 'POST',
            body: JSON.stringify({
              id
            }),
            headers: {
              'Content-Type': 'application/json'
            }

          })

          const result = await resDetail;
          if (result.status === 200) {
            const resultDetail = await resDetail.json();
            //console.log(resultDetail)
            //console.log(modal)

            //aliment modal div
            let ribDetail = "";
            ribDetail +=
              `<a  class="collection-item black-text"> <b>ID Attestation : </b> <span>${resultDetail.mouvement._id}</span> </a>`
            ribDetail +=
              `<a  class="collection-item black-text"><b>Agence : </b> <span> ${resultDetail.mouvement.age}</span></a>`
            ribDetail +=
              `<a  class="collection-item black-text"><b>Compte : </b> <span> ${resultDetail.mouvement.ncp}</span></a>`
            ribDetail +=
              `<a  class="collection-item black-text"><b>Date Saisie : </b> <span> ${moment(resultDetail.mouvement.date).format('DD/MM/YYYY HH:MM')}</span></a>`

            resultDetail.mouvement.mouvement.forEach((element, i) => {
              ribDetail +=
                `<a  class="collection-item black-text"><b>Mouvement ${i+1} : </b> <span>Du  ${moment(element.dateDebut).format("DD/MM/YYYY")} Au ${moment(element.dateFin).format("DD/MM/YYYY") } : ${element.montant.toFixed(2)} DH</span></a>`
            })
            ribDetail +=
              `<a  class="collection-item black-text"><b>1er Signataire : </b> <span>${resultDetail.mouvement.directeur}</span></a>`
            ribDetail +=
              `<a  class="collection-item black-text"><b>2ème Signataire : </b> <span>${resultDetail.mouvement.adjoint}</span></a>`
            ribDetail +=
              `<a  class="collection-item black-text"><b>Opérateur : </b> <span> ${resultDetail.mouvement.username}</span></a>`
            if (resultDetail.mouvement.etape === "3") {
              ribDetail +=
                `<a  class="collection-item black-text"><b>Motif Rejet : </b> <span> ${resultDetail.mouvement.motifReject}</span></a>`
            }
            modal.innerHTML = ribDetail
            //handel accpet button

            //create statuer button in modal if user is controler and etape is 1
            if (resultDetail.mouvement.etape === "1" && "<%= user.isControl %>".toLowerCase() ===
              "true") {
              $(".modal-footer").prepend(
                `<a href="/api/mouvement/${resultDetail.mouvement._id}/show" id="statuer" class="modal-close waves-effect waves-green btn-small">STATUER</a>`
              )

            }
            //create generer button in modal if user is not controler and etape is 2
            if (resultDetail.mouvement.etape === "2" && "<%= user.isControl %>".toLowerCase() ===
              "false") {
              $(".modal-footer").prepend(
                `<a href="/api/mouvement/${resultDetail.mouvement._id}/generate" id="generer" class="modal-close waves-effect waves-green btn-small">GENERER</a>`
              )

            }





            //create modal trigger
            const linkDetail = document.createElement("a");
            linkDetail.href = "#modal1";

            linkDetail.classList.add("modal-trigger");
            document.body.appendChild(linkDetail)
            linkDetail.click();
            document.body.removeChild(linkDetail);

          } else if(result.status === 401) {

            location.assign("/api/auth/?error=l'opération non pas aboutie , Utilisateur déconnecté")
          }



        } catch (err) {

          console.log(err)
        }

      })

    })
  });

      //show attestation rejeté message 
      if (Number("<%= error.length %>") > 1) {
        //console.log("<%= error.length %>")

        M.toast({
            html: "<%= error %>",
            displayLength: 6000,
            classes: 'red rounded h4'
        })
 
    }

    if (Number("<%= success.length %>") > 1) {
        //console.log("<%= error.length %>")

        M.toast({
            html: "<%= success %>",
            displayLength: 6000,
            classes: 'green rounded h4'
        })
 
    }

  //handel valider mouvement commercial
  //$(".modal-footer #accepter").click()
</script>